#1  question one 

 db.createCollection("books", {
   validator: {
     $jsonSchema: {
       bsonType: "object",
       required: ["title"],
       properties: {
         title: {
           bsonType: "string",
           minLength: 1,
           description: "Title must be a non-empty string"
         }
       }
     }
   }
 });

________________________________________________________________________________________________________________________

#2 question two 

db.authors.insertOne({name:"Author1", nationality:"British"})

________________________________________________________________________________________________________________________

#3 question three 
db.createCollection( "logs", { capped: true, size: 100000 } )

________________________________________________________________________________________________________________________

#4 question four 
db.books.createIndex({ title: 1 });

________________________________________________________________________________________________________________________

#5 question five 

db.books.insertOne({title:"Book1",author:"Ali", year:2008,geners:["Fantasy","adventure"]})

________________________________________________________________________________________________________________________

#6 question six 

db.books.insertMany([
  {
    title: "Book1",
    author: "Ali",
    year: 2008,
    genres: ["Fantasy", "Adventure"]
  },
  {
    title: "Book2",
    author: "Sara",
    year: 2015,
    genres: ["Science Fiction", "Thriller"]
  },
  {
    title: "Book3",
    author: "Omar",
    year: 2021,
    genres: ["Mystery", "Drama"]
  }
]);

________________________________________________________________________________________________________________________

#7 question seven 
db.logs.insertOne({book_id:"68795d5799b47a3459e5abed", action:"borrowed"})

________________________________________________________________________________________________________________________

#8 question eight 

db.books.updateOne({title:"Book1"},{$set:{title:"Book updated"}})

________________________________________________________________________________________________________________________

#9 question nine 
db.books.find({title:"Book updated"})

________________________________________________________________________________________________________________________

#10 question ten 

db.books.find({year:{$gt:2008,$lt:2021}})

________________________________________________________________________________________________________________________

#11 question eleven find book includes category 

 db.books.find({genres:{$in:["Drama"]}})

________________________________________________________________________________________________________________________

#12 question twelve find book sort by year 
 db.books.find().sort({ year: -1 }).skip(2).limit(3);

________________________________________________________________________________________________________________________

#13 question thirteen 
db.books.find({ year: { $type: "int" } }).sort({ year: 1 });

________________________________________________________________________________________________________________________

#14 question fourteen 

db.books.find({
  genres: { $nin: ["Drama", "Horror"] }
});

________________________________________________________________________________________________________________________

#15 question fifteen  
db.books.deleteMany({year:{$lt:2000}})

________________________________________________________________________________________________________________________

#16 question sixteen 

db.books.aggregate([
  { $match: { year: { $gt: 2000 } } },
  { $sort: { year: -1 } }
]);

________________________________________________________________________________________________________________________

#17 question seventeen 

 db.books.aggregate([
   { $match: { year: { $gt: 2000 } } },
   { $sort: { year: -1 } },
   { $project: { _id: 0, title: 1, author: 1 } }
 ]);

________________________________________________________________________________________________________________________

#18 question eighteen 

 db.books.aggregate([{$unwind:"$genres"}])
   
________________________________________________________________________________________________________________________

#19 question nineteen 

 db.books.aggregate([
   {$lookup:{from:'logs',localField:'_id',foreignField:'book_id',as:'logs'}},
 ])